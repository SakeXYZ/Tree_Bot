import requests
import json
import os

from aiogram import Bot, types, Dispatcher, executor
from aiogram.types import ReplyKeyboardMarkup
from dotenv import load_dotenv
from datetime import datetime

load_dotenv()
# –ü–æ–ª—É—á–µ–Ω–∏–µ –∑–Ω–∞—á–µ–Ω–∏–π –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–∑ —Ñ–∞–π–ª–∞ .env

# Trello URL, IP, TOKEN
main_trello_end_point = os.getenv('URL')
trello_key = os.getenv('API_KEY')
trello_token = os.getenv('TOKEN')

# Trello ID - CARDS
application_list_id = os.getenv('ZM_ONE')
application_list_id_two = os.getenv('ZM_TWO')
application_list_id_tree = os.getenv('ZM_TREE')
application_list_id_four = os.getenv('ZM_FOUR')
application_list_id_five = os.getenv('ZM_FIVE')
application_list_id_six = os.getenv('ZM_SIX')
application_list_id_seven = os.getenv('ZM_SEVEN')
application_list_id_free_time = os.getenv('NO_CODE')

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞ –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞
bot = Bot(os.getenv('ZM_API'))
dp = Dispatcher(bot=bot)

# –°–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã —Å –∫–Ω–æ–ø–∫–æ–π "–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è"—Ö
mainKeyBoard = ReplyKeyboardMarkup(resize_keyboard=True)
mainKeyBoard.add('‚ÑπÔ∏è–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è')

try:
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
    @dp.message_handler(commands=['start'])
    async def process_start_command(msg: types.Message):
        # –ü–µ—Ä–µ—Å—ã–ª–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –≥—Ä—É–ø–ø–æ–≤–æ–π —á–∞—Ç
        # await msg.answer(msg.from_user.id)
        feedback = -1002060370973
        await bot.forward_message(feedback, msg.from_user.id, msg.message_id, msg.from_user.first_name)

        # await bot.send_message(msg.from_user.id, msg.chat.id)
        text_salam = """
    üëã–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!üéâ

    ü§ñ–≠—Ç–æ—Ç –±–æ—Ç –ø–æ–º–æ–∂–µ—Ç –≤–∞–º –æ–±—Ä–∞—Ç–∏—Ç—å—Å—è –≤ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–π –æ—Ç–¥–µ–ª.üë®‚Äçüíª

    ‚ùì–ß—Ç–æ–±—ã –æ–±—Ä–∞—Ç–∏—Ç—å—Å—è –≤ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–π –æ—Ç–¥–µ–ª, –ø—Ä–æ—Å—Ç–æ –∑–∞–¥–∞–π—Ç–µ —Å–≤–æ–π –≤–æ–ø—Ä–æ—Å –∏–ª–∏ –ø—Ä–æ–±–ª–µ–º—É.üí°

    üì®–ë–æ—Ç –ø–µ—Ä–µ–¥–∞—Å—Ç –≤–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫—É —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–≥–æ –æ—Ç–¥–µ–ª.‚è≥


    ‚ÑπÔ∏è –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è ‚¨áÔ∏è

    –ü—Ä–∏–º–µ—Ä –∑–∞–ø—Ä–æ—Å–∞:

    #1 –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–π –æ—Ç–¥–µ–ª - –ò–≤–∞–Ω–æ–≤ –ò–≤–∞–Ω, –ü—Ä–æ–±–ª–µ–º–∞ —Å –∫–æ–º–ø—å—é—Ç–µ—Ä–æ–º

    –í–Ω–∏–º–∞–Ω–∏–µ: 

    –û—Ç–ø—Ä–∞–≤–ª—è–π—Ç–µ –∑–∞–ø—Ä–æ—Å—ã –≤ —Ñ–æ—Ä–º–∞—Ç–µ: [–∫–æ–¥][–æ—Ç–¥–µ–ª][-][—Ñ–∞–º–∏–ª–∏—è][–∏–º—è][,][–ø—Ä–æ–±–ª–µ–º–∞] üìù

    –ù–µ –æ—Ç–ø—Ä–∞–≤–ª—è–π—Ç–µ —Å—Ç–∏–∫–µ—Ä—ã, –≥–æ–ª–æ—Å–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –∏ –¥—Ä—É–≥–∏–µ –º–µ–¥–∏–∞—Ñ–∞–π–ª—ã üîá
                    """
        bot_picture = open("img/bot_pic.jpg", 'rb')
        await msg.answer_photo(photo=bot_picture, caption=text_salam, reply_markup=mainKeyBoard)
except Exception as startErr:
    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–∫–∏, –µ—Å–ª–∏ –≤–æ–∑–Ω–∏–∫–∞–µ—Ç –ø—Ä–æ–±–ª–µ–º–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã /start
    print(f'–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ø—ã—Ç–∫–µ –∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞: –û—à–∏–±–∫–∞: {startErr}')

try:
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏ "‚ÑπÔ∏è–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è"
    @dp.message_handler(text='‚ÑπÔ∏è–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è')
    async def cmd_instructions(msg: types.Message):
        logo = open('img/Instruction.jpg', 'rb')
        info_text = """

–ü—Ä–∞–≤–∏–ª–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –±–æ—Ç–∞:

–û—Ç–ø—Ä–∞–≤–ª—è–π—Ç–µ –∑–∞–ø—Ä–æ—Å—ã –≤ —Ñ–æ—Ä–º–∞—Ç–µ: [–∫–æ–¥ –æ—Ç–¥–µ–ª–∞][–æ—Ç–¥–µ–ª][-][—Ñ–∞–º–∏–ª–∏—è][–∏–º—è][,][–ø—Ä–æ–±–ª–µ–º–∞] üìù, –∫–∞–∫ —É–∫–∞–∑–∞–Ω–æ –≤ –ø—Ä–∏–º–µ—Ä–µ.

–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–¥—ã –æ—Ç–¥–µ–ª–æ–≤: 

#1 –û—Ñ–∏—Å –ë–∏–æ–ú–∏—Ä -
#2 –ë—É—Ö–≥–∞–ª—Ç–µ—Ä–∏—è –ë–ú - 
#3 –ò–ü –ó–∞–∫–∏—Ä–æ–≤–∞ -
#4 –°–∫–ª–∞–¥ -
#5 –î–µ–Ω–∏ –°–∞–∫ –≠–ª–∏–º - 
#6 –ó–¥–æ—Ä–æ–≤—ã–π –ú–∏—Ä -

–ü—Ä–∏–º–µ—Ä –∑–∞–ø—Ä–æ—Å–∞:

#1 –û—Ñ–∏—Å –ë–∏–æ–ú–∏—Ä - –ü–µ—Ç—Ä, –ø—Ä–æ–±–ª–µ–º–∞ —Å –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–æ–º

#2 –ë—É—Ö–≥–∞–ª—Ç–µ—Ä–∏—è –ë–ú - –ï–ª–µ–Ω–∞, –æ—à–∏–±–∫–∏ –ø—Ä–∏ —Ä–∞–±–æ—Ç–µ —Å –ø—Ä–∏–Ω—Ç–µ—Ä–æ–º

#3 –ò–ü –ó–∞–∫–∏—Ä–æ–≤–∞ - –ê–Ω–Ω–∞, –Ω–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ —Å–µ—Ç–∏

#4 –°–∫–ª–∞–¥ - –î–º–∏—Ç—Ä–∏–π, –ø—Ä–æ–ø–∞–ª –∑–≤—É–∫ —Å –∫–∞–º–µ—Ä –≤–∏–¥–µ–æ–Ω–∞–±–ª—é–¥–µ–Ω–∏–∏

#5 –î–µ–Ω–∏ –°–∞–∫ –≠–ª–∏–º - –û–ª—å–≥–∞, —Ç—Ä–µ–±—É–µ—Ç—Å—è —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞

#6 –ó–¥–æ—Ä–æ–≤—ã–π –ú–∏—Ä - –ê–ª–µ–∫—Å–µ–π, —Ç—Ä–µ–±—É–µ—Ç—Å—è –ø—Ä–æ—Å–º–æ—Ç—Ä —Å –∫–∞–º–µ—Ä –≤–∏–¥–µ–æ–Ω–∞–±–ª—é–¥–µ–Ω–∏–∏

–ù–µ –æ—Ç–ø—Ä–∞–≤–ª—è–π—Ç–µ —Å—Ç–∏–∫–µ—Ä—ã, –≥–æ–ª–æ—Å–æ–≤—ã–µ –∏ –¥—Ä—É–≥–∏–µ –º–µ–¥–∏–∞—Ñ–∞–π–ª—ã üîá.

–¢–æ—á–Ω–æ –ø–æ–≤—Ç–æ—Ä—è–π—Ç–µ —Ñ–æ—Ä–º–∞—Ç –ø—Ä–∏–º–µ—Ä–∞.

–°–æ–±–ª—é–¥–∞–π—Ç–µ —á–µ—Ç–∫–æ—Å—Ç—å –∏ —è—Å–Ω–æ—Å—Ç—å –ø—Ä–∏ –æ–ø–∏—Å–∞–Ω–∏–∏ –ø—Ä–æ–±–ª–µ–º—ã.

–ù–∞—Ä—É—à–µ–Ω–∏—è –ø—Ä–∞–≤–∏–ª –º–æ–≥—É—Ç –ø—Ä–∏–≤–µ—Å—Ç–∏ –∫ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—é –¥–æ—Å—Ç—É–ø–∞ –∫ –±–æ—Ç—É.
                    """
        await msg.answer_photo(photo=logo, caption=info_text)
except Exception as InfoErr:
    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–∫–∏, –µ—Å–ª–∏ –≤–æ–∑–Ω–∏–∫–∞–µ—Ç –ø—Ä–æ–±–ª–µ–º–∞ –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –∫–Ω–æ–ø–∫–∏ "–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è"
    print(f"–û—à–∏–±–∫–∞ {InfoErr} –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –∫–Ω–æ–ø–∫–∏ '–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è' ")

try:
    # –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–∞—Ä—Ç–æ—á–∫–∏ Trello
    def create_trello_card(card_name, card_desc, number_one):

        try:
            card_name = card_name.split()
            print(card_name)
            create_card_end_point = main_trello_end_point + 'cards'
            json_object = {"key": trello_key,
                           "token": trello_token,
                           "idList": number_one,
                           "name": ' '.join(card_name),
                           "desc": card_desc}
            new_card = requests.post(create_card_end_point, json=json_object)
            return json.loads(new_card.text)
        except KeyError as key_err:
            print(f'–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞ {key_err}')
        # –û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ —Å–æ–∑–¥–∞–Ω–∏–µ –∫–∞—Ä—Ç–æ—á–∫–∏ –≤ Trello

except Exception as SendToTrelloErr:
    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–∫–∏, –µ—Å–ª–∏ –≤–æ–∑–Ω–∏–∫–∞–µ—Ç –ø—Ä–æ–±–ª–µ–º–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∑–∞–ø—Ä–æ—Å–∞ –≤ Trello
    print(f"–û—à–∏–±–∫–∞ {SendToTrelloErr} –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∑–∞–ø—Ä–æ—Å–∞ –≤ Trello")


def text_process(list_accept):
    try:
        list_id_mapping = {
            '#1': application_list_id,
            '#2': application_list_id_two,
            '#3': application_list_id_tree,
            '#4': application_list_id_four,
            '#5': application_list_id_five,
            '#6': application_list_id_six,
            '#7': application_list_id_seven,
        }
        change_list = ' '.join(list_accept)
        change_2 = change_list.split('-')
        change_list = change_2[0].split()

        print(list_accept[0:2], list_accept[2::])
        print(f"{change_list[0]} Change list")
        now = datetime.now()
        dt_string = now.strftime("%d/%m/%Y")
        tm_string = now.strftime('%H:%M:%S')
        # –°–æ–∑–¥–∞–Ω–∏–µ –∫–∞—Ä—Ç–æ—á–∫–∏ Trello –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ç–µ–∫—Å—Ç–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        print(create_trello_card(' '.join(change_list),
                                 ''.join(change_2[1]) + '\n\n–î–∞—Ç–∞:' + dt_string + f'\n–í—Ä–µ–º—è:{tm_string}',
                                 list_id_mapping[change_list[0]]))
    except KeyError as key_error:
        change_list = ' '.join(list_accept)
        change_2 = change_list.split('-')
        change_list = change_2[0].split()

        print(list_accept[0:2], list_accept[2::])
        print(f"{change_list[0]} Change list")
        now = datetime.now()
        dt_string = now.strftime("%d/%m/%Y")
        tm_string = now.strftime('%H:%M:%S')
        # –°–æ–∑–¥–∞–Ω–∏–µ –∫–∞—Ä—Ç–æ—á–∫–∏ Trello –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ç–µ–∫—Å—Ç–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        print(create_trello_card(' '.join(change_list),
                                 ''.join(change_2[1]) + '\n\n–î–∞—Ç–∞:' + dt_string + f'\n–í—Ä–µ–º—è:{tm_string}',
                                 application_list_id_free_time))
        print(f"–û—à–∏–±–∫–∞: {key_error}")


try:
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—Å–µ—Ö –æ—Å—Ç–∞–ª—å–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è 
    @dp.message_handler()
    async def echo_message(msg: types.Message):
        # –ü–µ—Ä–µ—Å—ã–ª–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –≥—Ä—É–ø–ø–æ–≤–æ–π —á–∞—Ç
        feedback = -1002060370973
        await bot.forward_message(feedback, msg.from_user.id, msg.message_id, msg.from_user.first_name)
        print(msg.text.split(' '))
        # –û—Ç–ø—Ä–∞–≤–∫–∞ –≤–∏–¥–µ–æ –∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –≤—Ä–µ–º–µ–Ω–∏ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞—è–≤–∫–∏
        await bot.send_video(msg.chat.id, open('img/Gif_ask.gif', 'rb'),
                             caption="ü§ñ–í–∞—à–∞ –∑–∞—è–≤–∫–∞ –±—É–¥–µ—Ç –æ–±—Ä–∞–±–æ—Ç–∞–Ω–∞ –≤ —Ç–µ—á–µ–Ω–∏–µ 15 –º–∏–Ω—É—Ç!!!ü§ñ")
        list_accept = []
        for i in msg.text.split():
            list_accept.append(i)
        text_process(list_accept)
except Exception as ind_err:
    print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫–µ")

if __name__ == "__main__":
    executor.start_polling(dp)
